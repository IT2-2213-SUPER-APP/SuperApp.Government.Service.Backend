# Generated by Django 4.2.25 on 2025-10-20 02:47

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "deleted",
                    models.DateTimeField(db_index=True, editable=False, null=True),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "middle_name",
                    models.CharField(
                        max_length=150, null=True, verbose_name="middle name"
                    ),
                ),
                (
                    "iin",
                    models.CharField(
                        help_text="Individual Identification Number",
                        max_length=12,
                        null=True,
                        unique=True,
                        verbose_name="IIN (ИИН)",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(null=True, verbose_name="date of birth"),
                ),
                (
                    "sex",
                    models.CharField(
                        choices=[("MALE", "Male"), ("FEMALE", "Female")],
                        max_length=6,
                        null=True,
                        verbose_name="sex",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("LOCAL", "Local"), ("MIGRANT", "Migrant")],
                        max_length=7,
                        null=True,
                        verbose_name="status",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        max_length=20, null=True, verbose_name="primary phone number"
                    ),
                ),
                (
                    "identity_document_number",
                    models.CharField(
                        max_length=20,
                        null=True,
                        unique=True,
                        verbose_name="identity document number",
                    ),
                ),
                (
                    "height",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="height in cm"
                    ),
                ),
                (
                    "weight",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="weight in kg"
                    ),
                ),
                (
                    "race",
                    models.CharField(blank=True, max_length=50, verbose_name="race"),
                ),
                (
                    "additional_phone_numbers",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of up to two additional phone numbers",
                        verbose_name="additional phone numbers",
                    ),
                ),
                (
                    "physical_address",
                    models.TextField(blank=True, verbose_name="physical address"),
                ),
                (
                    "marriage_status_info",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        verbose_name="marriage status information",
                    ),
                ),
                (
                    "children_info",
                    models.JSONField(
                        blank=True, default=list, verbose_name="children information"
                    ),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="profile_pictures/",
                        verbose_name="profile picture",
                    ),
                ),
                (
                    "identity_document_front",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="documents/identity/",
                        verbose_name="identity document front",
                    ),
                ),
                (
                    "identity_document_back",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="documents/identity/",
                        verbose_name="identity document back",
                    ),
                ),
                (
                    "driver_license_front",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="documents/drivers_license/",
                        verbose_name="driver license front",
                    ),
                ),
                (
                    "driver_license_back",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="documents/drivers_license/",
                        verbose_name="driver license back",
                    ),
                ),
                (
                    "driver_license_number",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="driver license number"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
    ]
